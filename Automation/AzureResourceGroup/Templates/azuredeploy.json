{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "AzureSqlDatabaseName": {
      "type": "string",
      "minLength": 3
    },
    "BioInfoAdminApplicationFarmName": {
      "type": "string",
      "minLength": 1
    },
    "BioInfoAdminApplicationFarmSKU": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard"
      ],
      "defaultValue": "Free"
    },
    "BioInfoAdminApplicationFarmWorkerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0"
    },
    "BioInfoAPIApplicationFarmName": {
      "type": "string",
      "minLength": 1
    },
    "BioInfoAPIApplicationFarmSKU": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard"
      ],
      "defaultValue": "Free"
    },
    "BioInfoAPIApplicationFarmWorkerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0"
    },
    "BioInfoExternalApplicationFarmName": {
      "type": "string",
      "minLength": 1
    },
    "BioInfoExternalApplicationFarmSKU": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard"
      ],
      "defaultValue": "Free"
    },
    "BioInfoExternalApplicationFarmWorkerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0"
    },
    "CapacityOfIoTHub": {
      "type": "int",
      "defaultValue": 1
    },
    "DataLakeStoreName": {
      "type": "string",
      "minLength": 3
    },
    "IoTHubAdminPolicyPrimaryKey": {
      "type": "string",
      "minLength": 43,
      "maxLength": 43
    },
    "IoTHubAdminPolicySecondaryKey": {
      "type": "string",
      "minLength": 43,
      "maxLength": 43
    },
    "IoTHubDeviceConnectionPrimaryKey": {
      "type": "string",
      "minLength": 43,
      "maxLength": 43
    },
    "IoTHubDeviceConnectionSecondaryKey": {
      "type": "string",
      "minLength": 43,
      "maxLength": 43
    },
    "IoTHubMessageRetentionInDaysPeriod": {
      "type": "int",
      "defaultValue": 7,
      "minValue": 1,
      "maxValue": 7
    },
    "IoTHubName": {
      "type": "string",
      "minLength": 3
    },
    "IoTHubPartitionCount": {
      "type": "int",
      "defaultValue": 1
    },
    "IoTHubServiceConnectionPrimaryKey": {
      "type": "string",
      "minLength": 43,
      "maxLength": 43
    },
    "IoTHubServiceConnectionSecondaryKey": {
      "type": "string",
      "minLength": 43,
      "maxLength": 43
    },
    "IoTHubSKU": {
      "type": "string",
      "allowedValues": [
        "F1",
        "S1",
        "S2"
      ],
      "defaultValue": "F1"
    },
    "EventHubName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Event Hub"
      }
    },
    "EventHubSendPrimaryKey": {
      "type": "string"
    },
    "EventHubSendSecondaryKey": {
      "type": "string"
    },
    "EventHubListenPrimaryKey": {
      "type": "string"
    },
    "EventHubListenSecondaryKey": {
      "type": "string"
    },
    "NumberOfAdminApplicationFarmWorkers": {
      "type": "int",
      "defaultValue": 1
    },
    "NumberOfAPIApplicationFarmWorkers": {
      "type": "int",
      "defaultValue": 1
    },
    "NumberOfExternalApplicationFarmWrokers": {
      "type": "int",
      "defaultValue": 1
    },
    "ServiceBusNamespace": {
      "type": "string",
      "minLength": 3
    },
    "ServiceBusQueueName-StreamAnalytics-WebJob": {
      "type": "string",
      "minLength": 3
    },
    "bioinfodatabaseserverAdminLogin": {
      "type": "string",
      "minLength": 1
    },
    "bioinfodatabaseserverAdminLoginPassword": {
      "type": "securestring"
    },
    "bioinfodatabaseName": {
      "type": "string",
      "minLength": 1
    },
    "bioinfodatabaseCollation": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "bioinfodatabaseEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "bioinfodatabaseRequestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    }
  },
  "variables": {
    "BioInfoAPIApplicationName": "[concat('BioInfoAPIApplication', uniqueString(resourceGroup().id))]",
    "BioInfoAdminApplicationName": "[concat('BioInfoAdminApplication', uniqueString(resourceGroup().id))]",
    "BioInfoExternalApplicationName": "[concat('BioInfoExternalApplication', uniqueString(resourceGroup().id))]",
    "IoTHubAdminPolicyName": "Administration",
    "IoTHubDeviceConnectionPolicyName": "DeviceConnect",
    "IoTHubServiceConnectPolicyName": "ServiceConnect",
    "SBListenOnlyKeyName": "ListenOnlyKey",
    "AppServicePlanApiVersion": "2014-06-01",
    "WebAppApiVersion": "2015-08-01",
    "IoTHubApiVersion": "2016-02-03",
    "DataLakeApiVersion": "2015-10-01-preview",
    "AzureSqlDatabaseApiVersion": "2014-04-01-preview",
    "EventHubApiVersion": "2014-09-01",
    "bioinfodatabaseserverName": "[concat('bioinfodatabaseserver', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    //// Create Web Farms and Applications
    {
      "apiVersion": "[variables('AppServicePlanApiVersion')]",
      "dependsOn": [ ],
      "location": "[resourceGroup().location]",
      "name": "[parameters('BioInfoAPIApplicationFarmName')]",
      "properties": {
        "name": "[parameters('BioInfoAPIApplicationFarmName')]",
        "sku": "[parameters('BioInfoAPIApplicationFarmSKU')]",
        "workerSize": "[parameters('BioInfoAPIApplicationFarmWorkerSize')]",
        "numberOfWorkers": "[parameters('NumberOfAPIApplicationFarmWorkers')]"
      },
      "tags": {
        "displayName": "BioInfoAPIApplicationFarm"
      },
      "type": "Microsoft.Web/serverfarms"
    },
    {
      "apiVersion": "[variables('WebAppApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('BioInfoAPIApplicationFarmName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('BioInfoAPIApplicationName')]",
      "properties": {
        "name": "[variables('BioInfoAPIApplicationName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', parameters('BioInfoAPIApplicationFarmName'))]"
      },
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('BioInfoAPIApplicationFarmName'))]": "Resource",
        "displayName": "BioInfoAPIApplication"
      },
      "type": "Microsoft.Web/sites"
    },
    {
      "apiVersion": "[variables('AppServicePlanApiVersion')]",
      "dependsOn": [ ],
      "location": "[resourceGroup().location]",
      "name": "[parameters('BioInfoAdminApplicationFarmName')]",
      "properties": {
        "name": "[parameters('BioInfoAdminApplicationFarmName')]",
        "sku": "[parameters('BioInfoAdminApplicationFarmSKU')]",
        "workerSize": "[parameters('BioInfoAdminApplicationFarmWorkerSize')]",
        "numberOfWorkers": "[parameters('NumberOfAdminApplicationFarmWorkers')]"
      },
      "tags": {
        "displayName": "BioInfoAdminApplicationFarm"
      },
      "type": "Microsoft.Web/serverfarms"
    },
    {
      "apiVersion": "[variables('WebAppApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('BioInfoAdminApplicationFarmName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('BioInfoAdminApplicationName')]",
      "properties": {
        "name": "[variables('BioInfoAdminApplicationName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', parameters('BioInfoAdminApplicationFarmName'))]"
      },
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('BioInfoAdminApplicationFarmName'))]": "Resource",
        "displayName": "BioInfoAdminApplication"
      },
      "type": "Microsoft.Web/sites"
    },
    {
      "apiVersion": "[variables('AppServicePlanApiVersion')]",
      "dependsOn": [ ],
      "location": "[resourceGroup().location]",
      "name": "[parameters('BioInfoExternalApplicationFarmName')]",
      "properties": {
        "name": "[parameters('BioInfoExternalApplicationFarmName')]",
        "sku": "[parameters('BioInfoExternalApplicationFarmSKU')]",
        "workerSize": "[parameters('BioInfoExternalApplicationFarmWorkerSize')]",
        "numberOfWorkers": "[parameters('NumberOfExternalApplicationFarmWrokers')]"
      },
      "tags": {
        "displayName": "BioInfoExternalApplicationFarm"
      },
      "type": "Microsoft.Web/serverfarms"
    },
    {
      "apiVersion": "[variables('WebAppApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('BioInfoExternalApplicationFarmName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[variables('BioInfoExternalApplicationName')]",
      "properties": {
        "name": "[variables('BioInfoExternalApplicationName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', parameters('BioInfoExternalApplicationFarmName'))]"
      },
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('BioInfoExternalApplicationFarmName'))]": "Resource",
        "displayName": "BioInfoExternalApplication"
      },
      "type": "Microsoft.Web/sites"
    },
    //// Create IoT Hub
    {
      "apiVersion": "[variables('IoTHubApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[parameters('IoTHubName')]",
      "properties": {
        "authorizationPolicies": [
          {
            "name": "[variables('IoTHubAdminPolicyName')]",
            "primaryKey": "[parameters('IoTHubAdminPolicyPrimaryKey')]",
            "secondaryKey": "[parameters('IoTHubAdminPolicySecondaryKey')]",
            "permissions": [
              "ServiceConnect",
              "RegistryRead",
              "RegistryWrite",
              "DeviceConnect"
            ]
          },
          {
            "name": "[variables('IoTHubDeviceConnectionPolicyName')]",
            "primaryKey": "[parameters('IoTHubDeviceConnectionPrimaryKey')]",
            "secondaryKey": "[parameters('IoTHubDeviceConnectionSecondaryKey')]",
            "permissions": [
              "DeviceConnect"
            ]
          },
          {
            "name": "[variables('IoTHubServiceConnectPolicyName')]",
            "primaryKey": "[parameters('IoTHubServiceConnectionPrimaryKey')]",
            "secondaryKey": "[parameters('IoTHubServiceConnectionSecondaryKey')]",
            "permissions": [
              "ServiceConnect"
            ]
          }
        ],
        "eventHubEndpoints": {
          "events": {
            "messageRetentionInDays": "[parameters('IoTHubMessageRetentionInDaysPeriod')]",
            "partitionCount": "[parameters('IoTHubPartitionCount')]"
          }
        }
      },
      "sku": {
        "name": "[parameters('IoTHubSKU')]",
        "capacity": "[parameters('CapacityOfIoTHub')]"
      },
      "tags": {
        "displayName": "BioInfoIoTHub"
      },
      "type": "Microsoft.Devices/IotHubs"
    },
    {
      "apiVersion": "[variables('IoTHubApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Devices/Iothubs/', parameters('IoTHubName'))]"
      ],
      "name": "[concat(parameters('IoTHubName'), '/events/cg1')]",
      "type": "Microsoft.Devices/IotHubs/eventhubEndpoints/ConsumerGroups"
    },
    {
      "apiVersion": "[variables('IoTHubApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Devices/Iothubs/', parameters('IoTHubName'))]"
      ],
      "name": "[concat(parameters('IoTHubName'), '/events/cg2')]",
      "type": "Microsoft.Devices/IotHubs/eventhubEndpoints/ConsumerGroups"
    },
    {
      "apiVersion": "[variables('IoTHubApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Devices/Iothubs/', parameters('IoTHubName'))]"
      ],
      "name": "[concat(parameters('IoTHubName'), '/events/cg3')]",
      "type": "Microsoft.Devices/IotHubs/eventhubEndpoints/ConsumerGroups"
    },
    //// Create Data Lake
    {
      "apiVersion": "[variables('DataLakeApiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[parameters('DataLakeStoreName')]",
      "type": "Microsoft.DataLakeStore/accounts",
      "tags": {
        "displayName": "BioInfoDataLake"
      }
    },
    //// Create SQL Database
    {
      "apiVersion": "[variables('AzureSqlDatabaseApiVersion')]",
      "dependsOn": [ ],
      "location": "[resourceGroup().location]",
      "name": "[variables('bioinfodatabaseserverName')]",
      "properties": {
        "administratorLogin": "[parameters('bioinfodatabaseserverAdminLogin')]",
        "administratorLoginPassword": "[parameters('bioinfodatabaseserverAdminLoginPassword')]"
      },
      "resources": [
        {
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('bioinfodatabaseserverName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          },
          "type": "firewallrules"
        },
        {
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[variables('bioinfodatabaseserverName')]"
          ],
          "location": "[resourceGroup().location]",
          "name": "[parameters('bioinfodatabaseName')]",
          "properties": {
            "collation": "[parameters('bioinfodatabaseCollation')]",
            "edition": "[parameters('bioinfodatabaseEdition')]",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "[parameters('bioinfodatabaseRequestedServiceObjectiveName')]"
          },
          "tags": {
            "displayName": "BioInfoDatabase"
          },
          "type": "databases"
        }
      ],
      "tags": {
        "displayName": "BioInfoDatabaseServer"
      },
      "type": "Microsoft.Sql/servers"
    },
    //// Create Event Hub
    {
      "apiVersion": "[variables('EventHubApiVersion')]",
      "name": "[parameters('ServiceBusNamespace')]",
      "type": "Microsoft.EventHub/namespaces",
      "location": "[resourceGroup().location]",
      "resources": [
        {
          "apiVersion": "[variables('EventHubApiVersion')]",
          "name": "[parameters('EventHubName')]",
          "type": "eventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', parameters('ServiceBusNamespace'))]"
          ],
          "properties": {
            "path": "[parameters('EventHubName')]"
          }
        },
        {
          "apiVersion": "[variables('EventHubApiVersion')]",
          "name": "[concat(parameters('ServiceBusNamespace'),'/SendOnlyKey')]",
          "type": "Microsoft.EventHub/namespaces/authorizationRules",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', parameters('ServiceBusNamespace'))]"
          ],
          "location": "[resourceGroup().location]",
          "properties": {
            "KeyName": "SendOnlyKey",
            "ClaimType": "SendSharedAccessKey",
            "ClaimValue": "None",
            "PrimaryKey": "[parameters('EventHubSendPrimaryKey')]",
            "SecondaryKey": "[parameters('EventHubSendSecondaryKey')]",
            "Rights": [ "Send" ],
            "Revision": -1
          }
        },
        {
          "apiVersion": "[variables('EventHubApiVersion')]",
          "name": "[concat(parameters('ServiceBusNamespace'),'/',variables('SBListenOnlyKeyName'))]",
          "type": "Microsoft.EventHub/namespaces/authorizationRules",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', parameters('ServiceBusNamespace'))]"
          ],
          "location": "[resourceGroup().location]",
          "properties": {
            "KeyName": "ListenOnlyKey",
            "ClaimType": "ReceiveSharedAccessKey",
            "ClaimValue": "None",
            "PrimaryKey": "[parameters('eventHubListenPrimaryKey')]",
            "SecondaryKey": "[parameters('eventHubListenSecondaryKey')]",
            "Rights": [ "Listen" ],
            "Revision": -1
          }
        }
      ],
      "outputs": {
        "ApiWebAppUri": {
          "type": "string",
          "value": "[concat('http://',reference(resourceId('Microsoft.Web/sites', variables('BioInfoAPIApplicationName'))).hostNames[0])]"
        },
        "AdminWebAppUri": {
          "type": "string",
          "value": "[concat('http://',reference(resourceId('Microsoft.Web/sites', variables('BioInfoAdminApplicationName'))).hostNames[0])]"
        },
        "ExternalWebAppUri": {
          "type": "string",
          "value": "[concat('http://',reference(resourceId('Microsoft.Web/sites', variables('BioInfoExternalApplicationName'))).hostNames[0])]"
        }
      }
    }
